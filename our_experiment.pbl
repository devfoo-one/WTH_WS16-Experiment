# one test run
define DoAudioTest(number, frequency, data) {

    # setup audio file for test
    sound <- LoadSound("sine_100Hz.wav") # dont know how to define undefineds
    if (number ==  1) { sound <- LoadSound("sine_100Hz.wav") }
    if (number ==  2) { sound <- LoadSound("sine_500Hz.wav") }
    if (number ==  3) { sound <- LoadSound("sine_900Hz.wav") }
    if (number ==  4) { sound <- LoadSound("sine_1300Hz.wav") }
    if (number ==  5) { sound <- LoadSound("sine_1700Hz.wav") }
    if (number ==  6) { sound <- LoadSound("sine_2100Hz.wav") }
    if (number ==  7) { sound <- LoadSound("sine_2500Hz.wav") }
    if (number ==  8) { sound <- LoadSound("sine_2900Hz.wav") }
    if (number ==  9) { sound <- LoadSound("sine_3300Hz.wav") }
    if (number == 10) { sound <- LoadSound("sine_3700Hz.wav") }
    if (number == 11) { sound <- LoadSound("sine_4100Hz.wav") }

    confirmLabel <- EasyLabel("Test " + number + ": Press A if you hear a sound", gVideoWidth / 2, gVideoHeight / 2, gWindow, 44)
    Draw()

    # start sound at frequency with base amplitude
    startTime <- GetTime()
    PlayBackground(sound)

    response <- WaitForListKeyPressWithTimeout(["a"], 30000, 1) # third param is unused

    if (response == "a") {
        endTime <- GetTime()
        data.jndTime <- endTime - startTime
        Print(data.jndTime)
    } else {
        # invalidate test
        # atm jndTime stays zero
    }

    Stop(sound) # forget this and pebl crashes

    # TODO: geht so leider nicht, PEBL saugt
    #RandomizeTimer() # Seed RNG with the current time.
    #i <- RandomDiscrete(number)   # Generate a random number between 1 and number
    # get louder at timepoint # mit PEBL no chance

    Hide(confirmLabel)
    Draw()
}

# pebl prog entry point
define Start(lParameter) { # param is mandatory

    # Make initial objects needed for display.
    gWindow <- MakeWindow("grey")

    # make ten test frequencies
    # 100Hz, 2100Hz, 4100Hz, 6100Hz, 8100Hz, 10100Hz, 12100Hz, 14100Hz, 16100Hz und 18100Hz
    frequencies <- Sequence(100, 18100, 2000) # start, end, step

    # debug
    loop(freq, frequencies) {
        Print(freq)
    }

    # make test data to be filled
    gTestData <- Repeat(MakeCustomObject("JND"), 10)
    loop(data, gTestData) {
        data.jndTime <- 0  # assign defaulted property
        Print(data) # debug
    }

    # splash screen
    smiley <- MakeImage("smiley-big.png") # fuckin ugly smiley
    AddObject(smiley, gWindow)
    Move(smiley, gVideoWidth / 2, gVideoHeight / 2 - 100)

    welcomeLabel <- EasyLabel("Press any key to start the tests", gVideoWidth / 2, gVideoHeight / 2, gWindow, 44)
    Draw()
    WaitForAnyKeyPress()

    Hide(smiley) # HINT hides not yet, call draw to perform any graphical changes
    Hide(welcomeLabel)
    Draw()

    # perform test sequence
    actualTest <- 1 # OMG program language starting at 1 WTF
    while (actualTest < 11) {

        DoAudioTest(actualTest, Nth(frequencies, actualTest), Nth(gTestData, actualTest))
        actualTest <- actualTest + 1
    }

    # epilog
    goodbyeLabel <- EasyLabel("Thanks for participation", gVideoWidth / 2, gVideoHeight / 2, gWindow, 44)
    Draw()
    Wait(100)
}
